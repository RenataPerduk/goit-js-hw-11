{"version":3,"sources":["js/03-promises.js"],"names":["btnRef","document","querySelector","createPromise","Promise","setTimeout","Math","random","resolve","promise","write","delay","reject","logSuccess","position","console","log","logError","warn","addEventListener"],"mappings":";AAAA,MAAMA,EAASC,SAASC,cAAc,SAGtC,SAASC,IACE,OAAA,IAAIC,QAAY,KACnBC,WAAW,KACeC,KAAKC,SAAW,GAGlCC,QAAQC,QAAQC,MAAOC,OAEvBC,OAAOH,QAAQC,QAEpBC,OAEHE,WAAa,EAACC,EAAUH,KACpBI,QAAQC,2BAA2BF,QAAeH,SAGtDM,SAAW,EAACH,EAAUH,KAClBI,QAAQG,2BAA2BJ,QAAeH,UAnB9DX,EAAOmB,iBAAiB,SAAUhB","file":"03-promises.09113f64.js","sourceRoot":"../src","sourcesContent":["const btnRef = document.querySelector('write');\nbtnRef.addEventListener('change', createPromise);\n\nfunction createPromise() {\n    return new Promise((2, 1500),\n        setTimeout(() => {\n            const shouldResolve = Math.random() > 0.3;\n\n            if (shouldResolve) {\n                resolve(promise.write, delay);\n            } else {\n                reject(promise.write);\n            }\n        }, delay),\n\n        logSuccess = (position, delay) => {\n            console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        },\n\n        logError = (position, delay) => {\n            console.warn(`❌ Rejected promise ${position} in ${delay}ms`);\n        })\n}"]}